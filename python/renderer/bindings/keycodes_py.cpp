#include <pybind11/pybind11.h>

#include <renderer/input/keycodes.hpp>

namespace py = pybind11;

namespace renderer {

// NOLINTNEXTLINE
void bindings_keycodes(py::module& m) {
    {
        using Enum = renderer::key_action::KeyAction;
        py::enum_<Enum>(m, "KeyAction")
            .value("RELEASED", Enum::RELEASED)
            .value("PRESSED", Enum::PRESSED)
            .value("REPEAT", Enum::REPEAT);
    }

    {
        using Enum = renderer::keys::Keys;
        py::enum_<Enum>(m, "Keys")
            .value("KEY_SPACE", Enum::KEY_SPACE)
            .value("KEY_APOSTROPHE", Enum::KEY_APOSTROPHE)
            .value("KEY_COMMA", Enum::KEY_COMMA)
            .value("KEY_MINUS", Enum::KEY_MINUS)
            .value("KEY_PERIOD", Enum::KEY_PERIOD)
            .value("KEY_SLASH", Enum::KEY_SLASH)
            .value("KEY_0", Enum::KEY_0)
            .value("KEY_1", Enum::KEY_1)
            .value("KEY_2", Enum::KEY_2)
            .value("KEY_3", Enum::KEY_3)
            .value("KEY_4", Enum::KEY_4)
            .value("KEY_5", Enum::KEY_5)
            .value("KEY_6", Enum::KEY_6)
            .value("KEY_7", Enum::KEY_7)
            .value("KEY_8", Enum::KEY_8)
            .value("KEY_9", Enum::KEY_9)
            .value("KEY_SEMICOLON", Enum::KEY_SEMICOLON)
            .value("KEY_EQUAL", Enum::KEY_EQUAL)
            .value("KEY_A", Enum::KEY_A)
            .value("KEY_B", Enum::KEY_B)
            .value("KEY_C", Enum::KEY_C)
            .value("KEY_D", Enum::KEY_D)
            .value("KEY_E", Enum::KEY_E)
            .value("KEY_F", Enum::KEY_F)
            .value("KEY_G", Enum::KEY_G)
            .value("KEY_H", Enum::KEY_H)
            .value("KEY_I", Enum::KEY_I)
            .value("KEY_J", Enum::KEY_J)
            .value("KEY_K", Enum::KEY_K)
            .value("KEY_L", Enum::KEY_L)
            .value("KEY_M", Enum::KEY_M)
            .value("KEY_N", Enum::KEY_N)
            .value("KEY_O", Enum::KEY_O)
            .value("KEY_P", Enum::KEY_P)
            .value("KEY_Q", Enum::KEY_Q)
            .value("KEY_R", Enum::KEY_R)
            .value("KEY_S", Enum::KEY_S)
            .value("KEY_T", Enum::KEY_T)
            .value("KEY_U", Enum::KEY_U)
            .value("KEY_V", Enum::KEY_V)
            .value("KEY_W", Enum::KEY_W)
            .value("KEY_X", Enum::KEY_X)
            .value("KEY_Y", Enum::KEY_Y)
            .value("KEY_Z", Enum::KEY_Z)
            .value("KEY_LEFT_BRACKET", Enum::KEY_LEFT_BRACKET)
            .value("KEY_BACKSLASH", Enum::KEY_BACKSLASH)
            .value("KEY_RIGHT_BRACKET", Enum::KEY_RIGHT_BRACKET)
            .value("KEY_GRAVE_ACCENT", Enum::KEY_GRAVE_ACCENT)
            .value("KEY_WORLD_1", Enum::KEY_WORLD_1)
            .value("KEY_WORLD_2", Enum::KEY_WORLD_2)
            .value("KEY_ESCAPE", Enum::KEY_ESCAPE)
            .value("KEY_ENTER", Enum::KEY_ENTER)
            .value("KEY_TAB", Enum::KEY_TAB)
            .value("KEY_BACKSPACE", Enum::KEY_BACKSPACE)
            .value("KEY_INSERT", Enum::KEY_INSERT)
            .value("KEY_DELETE", Enum::KEY_DELETE)
            .value("KEY_RIGHT", Enum::KEY_RIGHT)
            .value("KEY_LEFT", Enum::KEY_LEFT)
            .value("KEY_DOWN", Enum::KEY_DOWN)
            .value("KEY_UP", Enum::KEY_UP)
            .value("KEY_PAGE_UP", Enum::KEY_PAGE_UP)
            .value("KEY_PAGE_DOWN", Enum::KEY_PAGE_DOWN)
            .value("KEY_HOME", Enum::KEY_HOME)
            .value("KEY_END", Enum::KEY_END)
            .value("KEY_CAPS_LOCK", Enum::KEY_CAPS_LOCK)
            .value("KEY_SCROLL_LOCK", Enum::KEY_SCROLL_LOCK)
            .value("KEY_NUM_LOCK", Enum::KEY_NUM_LOCK)
            .value("KEY_PRINT_SCREEN", Enum::KEY_PRINT_SCREEN)
            .value("KEY_PAUSE", Enum::KEY_PAUSE)
            .value("KEY_F1", Enum::KEY_F1)
            .value("KEY_F2", Enum::KEY_F2)
            .value("KEY_F3", Enum::KEY_F3)
            .value("KEY_F4", Enum::KEY_F4)
            .value("KEY_F5", Enum::KEY_F5)
            .value("KEY_F6", Enum::KEY_F6)
            .value("KEY_F7", Enum::KEY_F7)
            .value("KEY_F8", Enum::KEY_F8)
            .value("KEY_F9", Enum::KEY_F9)
            .value("KEY_F10", Enum::KEY_F10)
            .value("KEY_F11", Enum::KEY_F11)
            .value("KEY_F12", Enum::KEY_F12)
            .value("KEY_F13", Enum::KEY_F13)
            .value("KEY_F14", Enum::KEY_F14)
            .value("KEY_F15", Enum::KEY_F15)
            .value("KEY_F16", Enum::KEY_F16)
            .value("KEY_F17", Enum::KEY_F17)
            .value("KEY_F18", Enum::KEY_F18)
            .value("KEY_F19", Enum::KEY_F19)
            .value("KEY_F20", Enum::KEY_F20)
            .value("KEY_F21", Enum::KEY_F21)
            .value("KEY_F22", Enum::KEY_F22)
            .value("KEY_F23", Enum::KEY_F23)
            .value("KEY_F24", Enum::KEY_F24)
            .value("KEY_F25", Enum::KEY_F25)
            .value("KEY_KP_0", Enum::KEY_KP_0)
            .value("KEY_KP_1", Enum::KEY_KP_1)
            .value("KEY_KP_2", Enum::KEY_KP_2)
            .value("KEY_KP_3", Enum::KEY_KP_3)
            .value("KEY_KP_4", Enum::KEY_KP_4)
            .value("KEY_KP_5", Enum::KEY_KP_5)
            .value("KEY_KP_6", Enum::KEY_KP_6)
            .value("KEY_KP_7", Enum::KEY_KP_7)
            .value("KEY_KP_8", Enum::KEY_KP_8)
            .value("KEY_KP_9", Enum::KEY_KP_9)
            .value("KEY_KP_DECIMAL", Enum::KEY_KP_DECIMAL)
            .value("KEY_KP_DIVIDE", Enum::KEY_KP_DIVIDE)
            .value("KEY_KP_MULTIPLY", Enum::KEY_KP_MULTIPLY)
            .value("KEY_KP_SUBTRACT", Enum::KEY_KP_SUBTRACT)
            .value("KEY_KP_ADD", Enum::KEY_KP_ADD)
            .value("KEY_KP_ENTER", Enum::KEY_KP_ENTER)
            .value("KEY_KP_EQUAL", Enum::KEY_KP_EQUAL)
            .value("KEY_LEFT_SHIFT", Enum::KEY_LEFT_SHIFT)
            .value("KEY_LEFT_CONTROL", Enum::KEY_LEFT_CONTROL)
            .value("KEY_LEFT_ALT", Enum::KEY_LEFT_ALT)
            .value("KEY_LEFT_SUPER", Enum::KEY_LEFT_SUPER)
            .value("KEY_RIGHT_SHIFT", Enum::KEY_RIGHT_SHIFT)
            .value("KEY_RIGHT_CONTROL", Enum::KEY_RIGHT_CONTROL)
            .value("KEY_RIGHT_ALT", Enum::KEY_RIGHT_ALT)
            .value("KEY_RIGHT_SUPER", Enum::KEY_RIGHT_SUPER)
            .value("KEY_MENU", Enum::KEY_MENU);
    }
}

}  // namespace renderer
